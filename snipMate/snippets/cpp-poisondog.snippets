# Header File Sample
snippet ch
	#ifndef $2_H
	#define $2_H
	#endif

	/**
	 * @author Adam Huang <poisondog@gmail.com>
	 * @since `system("date +%Y-%m-%d")`
	 */
	namespace ${1:package} {
		class ${2:`Filename()`} {
			private:
				${3}
			public:
				${4}
		};
	}
# C++ File Sample
snippet cc
	#include "$2.h"

	/**
	 * @author Adam Huang <poisondog@gmail.com>
	 * @since `system("date +%Y-%m-%d")`
	 */
	namespace ${1:package} {
		${2:`Filename()`}::$2(${3}) {
			${4}
		}
	}
# Mission Header File
snippet chm
	#ifndef $2_H
	#define $2_H
	#endif

	#ifndef Mission_H
	#include "Mission.h"
	#endif

	/**
	 * @author Adam Huang <poisondog@gmail.com>
	 * @since `system("date +%Y-%m-%d")`
	 */
	namespace ${1:package} {
		class ${2:`Filename()`} : public Mission<${3:S}, ${4:T}> {
			public:
				$2();
				const Pointer<$4> execute(const Pointer<$3> input);
		};${5}
	}
# Mission C++ File Sample
snippet ccm
	#include "$2.h"

	/**
	 * @author Adam Huang <poisondog@gmail.com>
	 * @since `system("date +%Y-%m-%d")`
	 */
	namespace ${1:package} {
		${2:`Filename()`}::$2(${3}) {
			${4}
		}
		const Pointer<${6:T}> $2::execute(const Pointer<${5:S}> input) {${7}
			return input;${7}
		}
	}
# For Loop
snippet fo
	for (int ${1:i} = ${2:0}; $1 ${3:<} ${4:length}; $1${5:++}) {${6}
	}
snippet ifi
	#ifndef $1_H
	#include "${1:Header}.h"
	#endif${2}
snippet new
	Pointer<${1:Object}> ${2:var} = new ${3:$1}(${4:});${5:}
snippet sysout
	printf("${1:%s}\n"${2});${3}
