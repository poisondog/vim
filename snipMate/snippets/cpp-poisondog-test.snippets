snippet tt
	TEST(${1:`Filename()`}, ${2:TestName}) {
		ASSERT_TRUE(true);${3}
	}
snippet ct
	#include "gtest/gtest.h"

	namespace ${1:package} {
		class ${2:`Filename()`} : public ::testing::Test {
		protected:
			$2() {
				// You can do set-up work for each test here.
			}
			virtual ~$2() {
				// You can do clean-up work that doesn't throw exceptions here.
			}
			// If the constructor and destructor are not enough for setting up
			// and cleaning up each test, you can define the following methods:
			virtual void SetUp() {
				// Code here will be called immediately after the constructor (right
				// before each test).
			}
			virtual void TearDown() {
				// Code here will be called immediately after each test (right
				// before the destructor).
			}
		};
		TEST($2, ${3:TestName}) {
			${4}
		}
	}
snippet ae
	EXPECT_EQ(${1:except}, ${2:actual});${3}
snippet at
	ASSERT_TRUE(${1});${2}
